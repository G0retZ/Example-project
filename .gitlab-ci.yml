image: openjdk:8-jdk

variables:
  ANDROID_SDK_TOOLS_VERSION: "https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip"
  ANDROID_HOME: "./android-sdk-linux"

stages:
  - test
  - quality
  - build

before_script:
  - echo "/----------Get tools version of project----------------/"
  - export ANDROID_COMPILE_SDK=`egrep '^[[:blank:]]+compileSdkVersion'  app/build.gradle | awk '{print $2}'`
  - export ANDROID_BUILD_TOOLS=`egrep '^[[:blank:]]+buildToolsVersion'  app/build.gradle | sed "s/'//g" | awk '{print $2}'`
  - echo "ANDROID_COMPILE_SDK ${ANDROID_COMPILE_SDK}"
  - echo "ANDROID_BUILD_TOOLS ${ANDROID_BUILD_TOOLS}"
  - echo "/----------------Done!----------------------------------/"
  - echo "/----------------Install SDK Tools----------------------/"
  - echo "create ${ANDROID_HOME} folder path"
  - mkdir -p "${ANDROID_HOME}"
  - echo "download SDK Tools and save to ${ANDROID_HOME}.zip"
  - wget -q -O "${ANDROID_HOME}.zip" "${ANDROID_SDK_TOOLS_VERSION}"
  - echo "unzip SDK Tools to ${ANDROID_HOME}"
  - unzip -q "${ANDROID_HOME}.zip" -d "${ANDROID_HOME}"
  - export PATH=$PATH:$ANDROID_HOME/tools/bin/
  - echo "/----------------Done!----------------------------------/"
  - echo "/----------Install and update android tools-------------/"
  - echo y | sdkmanager "platform-tools"
  - echo y | sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}"
  - echo y | sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}"
  - echo y | sdkmanager "extras;google;m2repository"
  - echo y | sdkmanager "extras;android;m2repository"
  - echo y | sdkmanager "extras;google;google_play_services"
  - echo y | sdkmanager --update
  - echo y | sdkmanager --licenses > android-licences.log
  - chmod +x ./gradlew
  - ./gradlew --version

test_implementation:
  stage: test
  tags:
    - docker-dev
  script:
    - ./gradlew test
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}_${CI_JOB_NAME}_${CI_JOB_ID}"
    when: always
    paths:
      - app/build/reports/tests/
    expire_in: 1 day


gradlew_lint:
  stage: quality
  tags:
    - docker-dev
  script:
    - ./gradlew lint
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}_${CI_JOB_NAME}_${CI_JOB_ID}"
    when: always
    paths:
      - app/build/reports/
    expire_in: 1 day

android_build:
  stage: build
  tags:
    - docker-dev
  script:
    - ./gradlew clean assembleRelease
  artifacts:
    name: "build_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}_${CI_JOB_NAME}_${CI_JOB_ID}"
    when: always
    paths:
      - app/build/outputs/apk/
      - app/build/outputs/mapping/
    expire_in: 1 day
